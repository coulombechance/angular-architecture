{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/communication/communication-routing.module.ts","webpack:///./src/app/communication/communication.component.html","webpack:///./src/app/communication/communication.component.ts","webpack:///./src/app/communication/communication.module.ts","webpack:///./src/app/communication/customer-details/customer-details.component.html","webpack:///./src/app/communication/customer-details/customer-details.component.ts","webpack:///./src/app/communication/customers-list/customers-list.component.css","webpack:///./src/app/communication/customers-list/customers-list.component.html","webpack:///./src/app/communication/customers-list/customers-list.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/cloner.service.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/event-bus.service.ts","webpack:///./src/app/pipes-functions/pipes-functions-routing.module.ts","webpack:///./src/app/pipes-functions/pipes-functions.component.html","webpack:///./src/app/pipes-functions/pipes-functions.component.ts","webpack:///./src/app/pipes-functions/pipes-functions.module.ts","webpack:///./src/app/planning/planning-routing.module.ts","webpack:///./src/app/planning/planning.component.html","webpack:///./src/app/planning/planning.component.ts","webpack:///./src/app/planning/planning.module.ts","webpack:///./src/app/shared/addtax.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/structuring-components/customer-details/customer-details.component.html","webpack:///./src/app/structuring-components/customer-details/customer-details.component.ts","webpack:///./src/app/structuring-components/customers-list/customers-list.component.css","webpack:///./src/app/structuring-components/customers-list/customers-list.component.html","webpack:///./src/app/structuring-components/customers-list/customers-list.component.ts","webpack:///./src/app/structuring-components/structuring-components-routing.module.ts","webpack:///./src/app/structuring-components/structuring-components.component.html","webpack:///./src/app/structuring-components/structuring-components.component.ts","webpack:///./src/app/structuring-components/structuring-components.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./customers/customers.module\": [\n\t\t\"./src/app/features-modules/customers/customers.module.ts\",\n\t\t\"customers-customers-module\"\n\t],\n\t\"./orders/orders.module\": [\n\t\t\"./src/app/features-modules/orders/orders.module.ts\",\n\t\t\"orders-orders-module\"\n\t],\n\t\"app/features-modules/features-modules.module\": [\n\t\t\"./src/app/features-modules/features-modules.module.ts\",\n\t\t\"app-features-modules-features-modules-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlanningComponent } from './planning/planning.component';\nimport { FeaturesModulesComponent } from './features-modules/features-modules.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch:'full', redirectTo: '/planning' },\n  { path: 'features-modules', loadChildren: 'app/features-modules/features-modules.module#FeaturesModulesModule' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n}\n\n","module.exports = \".circle {\\n    height:20px;\\n    width:20px;\\n    border-radius: 50px;\\n    padding-left:6px;\\n    background: red;\\n    color: white;\\n    margin-top: 15px;\\n    margin-right: 10px;\\n}\"","module.exports = \"\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#/\\\"><img src=\\\"assets/angular.png\\\" class=\\\"logo\\\" /></a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav nav-pills\\\">\\n      <li routerLinkActive=\\\"active\\\">\\n        <a routerLink=\\\"/planning\\\">Planning</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a routerLink=\\\"/features-modules\\\">Features/Modules</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a routerLink=\\\"/structuring-components\\\">Components</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n          <a routerLink=\\\"/communication\\\">Communication</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a routerLink=\\\"/pipes-functions\\\">Pipes/Functions</a>\\n    </li>\\n    </ul>\\n    <strong *ngIf=\\\"customers\\\" class=\\\"pull-right circle\\\">\\n        {{ customers.length }}\\n    </strong>\\n  </nav>\\n\\n\\n  <strong *ngIf=\\\"customer\\\" class=\\\"pull-right\\\" style=\\\"padding-right: 10px;\\\">\\n      Current Customer: {{ customer.name }}\\n  </strong>\\n  \\n  <main>\\n    <router-outlet></router-outlet>\\n  </main>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { EventBusService, Events } from './core/services/event-bus.service';\nimport { ICustomer } from './shared/interfaces';\nimport { Subscription } from 'rxjs';\nimport { DataService } from './core/services/data.service';\n\n@Component({ \n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent implements OnInit { \n  customers: ICustomer[];\n  customer: ICustomer;\n  eventbusSub: Subscription;\n  dataServiceSub: Subscription;\n  \n  constructor(private eventbus: EventBusService, private dataService: DataService) { }\n\n  ngOnInit() {\n    //Example of using an event bus to provide loosely coupled communication (mediator pattern)\n    this.eventbusSub = this.eventbus.on(Events.CustomerSelected, (cust => this.customer = cust));\n\n    //Example of using BehaviorSubject to be notified when a service changes\n    this.dataServiceSub = this.dataService.customersChanged$.subscribe(custs => this.customers = custs);\n  }\n\n  ngOnDestroy() {\n    this.eventbusSub.unsubscribe();\n    this.dataServiceSub.unsubscribe();\n  }\n  \n}\n","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent }  from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PlanningModule } from './planning/planning.module';\nimport { StructuringComponentsModule } from './structuring-components/structuring-components.module';\nimport { CoreModule } from './core/core.module';\nimport { CommunicationModule } from './communication/communication.module';\nimport { PipesFunctionsComponent } from './pipes-functions/pipes-functions.component';\nimport { PipesFunctionsModule } from './pipes-functions/pipes-functions.module';\nimport { AddTaxPipe } from './shared/addtax.pipe';\n\n@NgModule({\n  imports: [ \n    BrowserModule, \n    CoreModule,\n    AppRoutingModule,\n    PlanningModule,\n    StructuringComponentsModule,\n    PipesFunctionsModule,\n    CommunicationModule\n  ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommunicationComponent } from './communication.component';\n\nconst routes: Routes = [\n    { path: 'communication', component: CommunicationComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class CommunicationRoutingModule {\n  static components = [ CommunicationComponent ];\n}\n\n","module.exports = \"<h1>Services/Components Communication</h1>\\n<br />\\n<ul>\\n    <li>An \\\"Event Bus\\\" can provide a loosely coupled way to communicate between objects.</li>\\n    <li>Services can expose a Subject/BehaviorSubject/ReplaySubject that other services/components can subscribe to for changes.</li>\\n    <li>State management solutions such as Ngrx or Mobx can also be used.</li>\\n</ul>\\n<br />\\n<button (click)=\\\"addCustomerPush()\\\" class=\\\"btn btn-danger\\\">Add Customer (push only)</button>&nbsp;&nbsp;\\n<button (click)=\\\"addCustomerClone()\\\" class=\\\"btn btn-primary\\\">Add Customer (push a clone)</button>\\n\\n<br />\\n<br />\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-customers-list [customers]=\\\"customers\\\" (customerSelected)=\\\"selected($event)\\\"></app-customers-list>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <app-customer-details [customer]=\\\"customer\\\"></app-customer-details>\\n    </div>\\n</div>\\n\\n<br />\\n<br />\\n<h4>Notes:</h4>\\n<ul>\\n    <li>This example shows how services and subjects can be used to provide a communication mechanism for \\n            components. Click one of the buttons below and note how the customers count number in the upper-right corner \\n            changes (event bus is used). Note that when a customer is selected in the \\\"Customers\\\" presentation component the details display\\n            AND the customer details display below the navbar (BehaviorSubject is used).</li>\\n    <li>The \\\"Add Customer (push only)\\\" button will call a service to add a customer but the returned customers data will not display properly and will not trigger ngOnChanges in the presentation component since the customers array itself doesn't change.</li>\\n    <li>The \\\"Add Customer (push a clone)\\\" will call a service to add a customer but the service will return a clone of the customers data. The presentation component's ngOnChanges will fire and the data will display correctly as a result.</li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'app-communication',\n  templateUrl: './communication.component.html'\n})\nexport class CommunicationComponent implements OnInit {\n\n  customers: ICustomer[] = [];\n  customer: ICustomer;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.getCustomers()\n        .subscribe((custs: ICustomer[]) => this.customers = custs);\n  }\n\n  selected(cust: ICustomer) {\n    this.customer = cust;\n  }\n\n  addCustomerPush() {\n    this.dataService.addCustomer()\n        .subscribe((custs: ICustomer[]) => this.customers = custs);\n  }\n\n  addCustomerClone() {\n    this.dataService.addCustomerClone()\n        .subscribe((custs: ICustomer[]) => this.customers = custs);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CommunicationRoutingModule } from './communication-routing.module';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CommunicationRoutingModule  \n  ],\n  declarations: [ CommunicationRoutingModule.components, CustomersListComponent, CustomerDetailsComponent ]\n})\nexport class CommunicationModule { }\n","module.exports = \"<h4>Details</h4>\\n<table *ngIf=\\\"customer\\\" class=\\\"table\\\">\\n  <tr>\\n    <td>Name: </td>\\n    <td>{{ customer.name }}</td>\\n  </tr>\\n  <tr>\\n    <td>City: </td>\\n    <td>{{ customer.city }}</td>\\n  </tr>\\n  <tr>\\n    <td>Age: </td>\\n    <td>{{ customer.age }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: ICustomer;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"tr {\\n    cursor: pointer;\\n}\"","module.exports = \"<h4>Customers</h4>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n  </tr>\\n  <tr *ngFor=\\\"let cust of customers\\\" (click)=\\\"selectCustomer(cust)\\\">\\n    <td>{{ cust.name }}</td>\\n  </tr>\\n</table>\\n<br />\\n<div *ngFor=\\\"let msg of logMessages\\\">{{ msg }}</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { ICustomer } from '../../shared/interfaces';\nimport { EventBusService, EmitEvent, Events } from '../../core/services/event-bus.service';\n\n@Component({\n  selector: 'app-customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: [ './customers-list.component.css' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersListComponent implements OnInit {\n  @Input() customers: ICustomer[];\n  @Output() customerSelected = new EventEmitter<ICustomer>();\n  logMessages: string[] = [];\n\n  constructor(private eventbus: EventBusService) { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['customers']) {\n      this.logMessages.push('ngOnChanges Fired: Customers changed');\n    }\n  }\n\n  selectCustomer(cust: ICustomer) {\n    this.customerSelected.emit(cust);\n    this.eventbus.emit(new EmitEvent(Events.CustomerSelected, cust));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataService } from './services/data.service';\nimport { ClonerService } from './services/cloner.service';\nimport { EventBusService } from './services/event-bus.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [ DataService, ClonerService, EventBusService ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\n\n// https://github.com/codeandcats/fast-clone/blob/master/index.js\n\n@Injectable()\nexport class ClonerService {\n\n    deepClone(value) {\n        const type = typeof value;\n        switch (type) {\n            case 'object':\n                // null and undefined\n                if (value == null) {\n                    return value;\n                }\n\n                let result;\n\n                if (value instanceof Date) {\n                    result = new Date();\n                    result.setTime(value.getTime());\n                    return result;\n                }\n                else if (value instanceof RegExp) {\n                    result = this.newRegExp(value);\n                    return result;\n                }\n\n                result = JSON.parse(JSON.stringify(value));\n                this.fixTypes(value, result);\n                return result;\n\n            default:\n                return value;\n        }\n    }\n\n    private fixPropertyValue(original, copy, key) {\n        const originalValue = original[key];\n        const originalType = typeof originalValue;\n\n        switch (originalType) {\n            case 'object':\n                if (originalValue instanceof Date) {\n                    const newValue = new Date();\n                    newValue.setTime(originalValue.getTime());\n                    copy[key] = newValue;\n                }\n                else if (originalValue instanceof RegExp) {\n                    copy[key] = this.newRegExp(originalValue);\n                }\n                else if (originalValue == null) {\n                    copy[key] = originalValue;\n                }\n                else {\n                    this.fixTypes(originalValue, copy[key]);\n                }\n                break;\n\n            case 'number':\n                if (isNaN(originalValue)) {\n                    copy[key] = NaN;\n                }\n                else if (originalValue === Infinity) {\n                    copy[key] = Infinity;\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    private fixTypes(original, copy) {\n        if (original instanceof Array) {\n            for (let index = 0; index < original.length; index++) {\n                this.fixPropertyValue(original, copy, index);\n            }\n        }\n        else {\n            const keys = Object.getOwnPropertyNames(original);\n            keys.forEach((key) => {\n                this.fixPropertyValue(original, copy, key);\n            });\n        }\n    }\n\n    private newRegExp(value) {\n        const regexpText = String(value);\n        const slashIndex = regexpText.lastIndexOf('/');\n        return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ICustomer, IProduct } from '../../shared/interfaces';\nimport { ClonerService } from './cloner.service';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class DataService {\n\n  customers: ICustomer[] = [\n    {\n      id: 1,\n      name: 'John Doe',\n      city: 'Phoenix',\n      age: 42\n    },\n    {\n      id: 2,\n      name: 'Jane Doe',\n      city: 'Seattle',\n      age: 30\n    },\n    {\n      id: 3,\n      name: 'Michelle Thompson',\n      city: 'Orlando',\n      age: 22\n    }\n  ];\n\n  products: IProduct[] =  [\n    {\n      id: 1,\n      name: 'Basketball',\n      price: 29.99\n    },\n    {\n      id: 2,\n      name: 'XBox',\n      price: 249.99\n    },\n    {\n      id: 3,\n      name: 'Nintendo Switch',\n      price: 249.99\n    },\n    {\n      id: 4,\n      name: 'Bat',\n      price: 29.99\n    },\n    {\n      id: 5,\n      name: 'Glove',\n      price: 29.99\n    },\n    {\n      id: 6,\n      name: 'Cell Phone',\n      price: 799.99\n    },\n    {\n      id: 7,\n      name: 'Cell Phone Service',\n      price: 49.99\n    },\n    {\n      id: 8,\n      name: 'Laptop',\n      price: 999.99\n    },\n    {\n      id: 9,\n      name: 'Bluetooth Speaker',\n      price: 69.99\n    },\n    {\n      id: 10,\n      name: 'TV',\n      price: 1599.99\n    }\n  ];\n\n  private customersSubject$ = new BehaviorSubject<ICustomer[]>(this.customers);\n  customersChanged$ = this.customersSubject$.asObservable();\n\n  constructor(private cloner: ClonerService) { }\n\n  getCustomers() : Observable<ICustomer[]> {\n    return of(this.customers);\n  }\n\n  getProducts() : Observable<IProduct[]> {\n    return of(this.products);\n  }\n\n  addCustomer() : Observable<ICustomer[]> {\n    let id = this.customers[this.customers.length - 1].id + 1;\n    this.customers.push({\n      id: id,\n      name: 'New Customer ' + id,\n      city: 'Somewhere',\n      age: id * 5\n    });\n    this.customersSubject$.next(this.customers);\n    return of(this.customers);\n  }\n\n  addCustomerClone() : Observable<ICustomer[]> {\n    return this.addCustomer().pipe(\n      map(custs => {\n        return this.cloner.deepClone(custs);\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Subscription, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class EventBusService {\n\n    subject = new Subject<any>();\n\n    constructor() { }\n\n    on(event: Events, action: any): Subscription {\n         return this.subject\n              .pipe(\n                    filter((e: EmitEvent) => {\n                      return e.name === event;\n                    }),\n                    map((event: EmitEvent) => {\n                      return event.value;\n                    })\n                  )\n                    .subscribe(action);\n    }\n\n    emit(event: EmitEvent) {\n        this.subject.next(event);\n    }\n}\n\nexport class EmitEvent {\n\n  constructor(public name: any, public value?: any) { }\n\n}\n\nexport enum Events {\n  CustomerSelected\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PipesFunctionsComponent } from './pipes-functions.component';\n\nconst routes: Routes = [\n    { path: 'pipes-functions', component: PipesFunctionsComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [ RouterModule ]\n})\nexport class PipesFunctionsRoutingModule {\n    static components = [\n        PipesFunctionsComponent\n    ]\n}","module.exports = \"<h1>Pipes versus Functions</h1>\\nThis example shows how using pipes (where possible) instead of functions in a template can enhance performance. See the console.\\n<h3>Calling a Function from a Template</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Total</th>\\n  </tr>\\n  <tr *ngFor=\\\"let product of products$ | async\\\">\\n    <td>{{ product.name }}</td>\\n    <td>{{ getTotalPrice(product.price) | currency }}</td>\\n  </tr>\\n</table>\\n\\n<br />\\n<br />\\n<h3>Using a Pipe (and @memo() decorator) in a Template</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Total</th>\\n  </tr>\\n  <tr *ngFor=\\\"let product of products$ | async\\\">\\n    <td>{{ product.name }}</td>\\n    <td>{{ product.price | addtax:product.price | currency }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DataService } from '../core/services/data.service';\nimport { IProduct } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-pipes-functions',\n  templateUrl: './pipes-functions.component.html',\n  styles: []\n})\nexport class PipesFunctionsComponent implements OnInit {\n  products$: Observable<IProduct[]>;\n  tax = .08;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.products$ = this.dataService.getProducts();\n  }\n\n  getTotalPrice(price: number) {\n    console.log('totalPrice() function called');\n    return price + (price * this.tax);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PipesFunctionsRoutingModule } from './pipes-functions-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    PipesFunctionsRoutingModule\n  ],\n  declarations: [ PipesFunctionsRoutingModule.components ]\n})\nexport class PipesFunctionsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PlanningComponent } from './planning.component';\n\nconst routes: Routes = [\n    { path: 'planning', component: PlanningComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [ RouterModule ]\n})\nexport class PlanningRoutingModule {\n    static components = [\n        PlanningComponent\n    ]\n}","module.exports = \"<h1>Planning Your Architecture</h1>\\n<iframe src=\\\"https://docs.google.com/presentation/d/e/2PACX-1vT9WrzJ4gh3tIJ-V0hx9ogMk6fpm0A7SaIo0QBQa5_er5r7yXWyi7hiYkjZkT7O44tKpW7Tot-tery8/embed?start=false&loop=false&delayms=3000\\\" \\n    frameborder=\\\"0\\\" \\n    width=\\\"900\\\" height=\\\"535\\\" allowfullscreen=\\\"true\\\" mozallowfullscreen=\\\"true\\\" \\n    webkitallowfullscreen=\\\"true\\\"></iframe>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-planning',\n    templateUrl: 'planning.component.html'\n})\nexport class PlanningComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() { \n\n    }\n\n}","import { NgModule } from '@angular/core';\n\nimport { PlanningRoutingModule } from './planning-routing.module';\nimport { PlanningComponent } from './planning.component';\n\n@NgModule({\n    imports: [ PlanningRoutingModule ],\n    declarations: [ PlanningRoutingModule.components ],\n})\nexport class PlanningModule { }","import { Pipe, PipeTransform } from '@angular/core';\nimport memo from 'memo-decorator';\n\nfunction getTotalPrice(price: number) {\n  console.log('addtax pipe called');\n  let total = price + (price * .08);\n  return total;\n}\n\n@Pipe({\n  name: 'addtax'\n})\nexport class AddTaxPipe implements PipeTransform {\n  @memo()\n  transform(price: number): number {\n    if (price) {\n      return getTotalPrice(price);\n    }\n    return price;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddTaxPipe } from './addtax.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [ AddTaxPipe ],\n  declarations: [ AddTaxPipe ]\n})\nexport class SharedModule { }\n","module.exports = \"<h4>Details</h4>\\n<table *ngIf=\\\"customer\\\" class=\\\"table\\\">\\n  <tr>\\n    <td>Name: </td>\\n    <td>{{ customer.name }}</td>\\n  </tr>\\n  <tr>\\n    <td>City: </td>\\n    <td>{{ customer.city }}</td>\\n  </tr>\\n  <tr>\\n    <td>Age: </td>\\n    <td>{{ customer.age }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: ICustomer;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"tr {\\n    cursor: pointer;\\n}\"","module.exports = \"<h4>Customers</h4>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n  </tr>\\n  <tr *ngFor=\\\"let cust of customers\\\" (click)=\\\"selectCustomer(cust)\\\">\\n    <td>{{ cust.name }}</td>\\n  </tr>\\n</table>\\n<br />\\n<div *ngFor=\\\"let msg of logMessages\\\">{{ msg }}</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: [ './customers-list.component.css' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersListComponent implements OnInit {\n  @Input() customers: ICustomer[];\n  @Output() customerSelected = new EventEmitter<ICustomer>();\n  logMessages: string[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['customers']) {\n      this.logMessages.push('Customers changed');\n    }\n  }\n\n  selectCustomer(cust: ICustomer) {\n    this.customerSelected.emit(cust);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StructuringComponentsComponent } from './structuring-components.component';\n\nconst routes: Routes = [\n    { path: 'structuring-components', component: StructuringComponentsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class StructuringComponentsRoutingModule {\n  static components = [ StructuringComponentsComponent ];\n}\n\n","module.exports = \"<h1>Container and Presentation Components</h1>\\n<ul>\\n    <li>Container components act as the \\\"manager\\\" for presentation components. Responsible for managing state.</li>\\n    <li>Presentation components are handed state and are responsible for presenting/rendering it.</li>\\n    <li>Recommending setting changeDetection to ChangeDetectionStrategy.OnPush</li>\\n</ul>\\n<br />\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-customers-list [customers]=\\\"customers\\\" (customerSelected)=\\\"selected($event)\\\"></app-customers-list>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <app-customer-details [customer]=\\\"customer\\\"></app-customer-details>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'app-structuring-components',\n  templateUrl: './structuring-components.component.html'\n})\nexport class StructuringComponentsComponent implements OnInit {\n\n  customers: ICustomer[] = [];\n  customer: ICustomer;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.getCustomers()\n        .subscribe((custs: ICustomer[]) => this.customers = custs);\n  }\n\n  selected(cust: ICustomer) {\n    this.customer = cust;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructuringComponentsRoutingModule } from './structuring-components-routing.module';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StructuringComponentsRoutingModule  \n  ],\n  declarations: [ StructuringComponentsRoutingModule.components, CustomersListComponent, CustomerDetailsComponent ]\n})\nexport class StructuringComponentsModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}